{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FoodSection=()=>{const[foodMenu,setFoodMenu]=useState([]);// Stores the food items\nconst[filter,setFilter]=useState(\"all\");// Current category filter\nconst[loading,setLoading]=useState(true);// Loading state\nconst[error,setError]=useState(null);// Error state\nconst[orderSuccess,setOrderSuccess]=useState(\"\");// Order success message\n// Fetch food data from the fake API\nuseEffect(()=>{const fetchFoodData=async()=>{try{const response=await fetch(\"https://mocky.io/v2/your-mock-api-endpoint\");// Replace with your API endpoint\nif(!response.ok){throw new Error(\"Failed to fetch food data\");}const data=await response.json();setFoodMenu(data);}catch(err){setError(err.message);}finally{setLoading(false);}};fetchFoodData();},[]);// Handle ordering pizza\nconst handleOrder=async itemId=>{try{const response=await fetch(\"https://mocky.io/v2/your-order-api-endpoint\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({itemId})});if(!response.ok){throw new Error(\"Failed to place order\");}const result=await response.json();setOrderSuccess(`Order placed successfully for item: ${result.name}`);}catch(err){setOrderSuccess(\"Failed to place order. Please try again.\");}};// Filtered items based on the selected category\nconst filteredMenu=filter===\"all\"?foodMenu:foodMenu.filter(item=>item.category===filter);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading food menu...\"});}if(error){return/*#__PURE__*/_jsxs(\"div\",{className:\"error\",children:[\"Error: \",error]});}return/*#__PURE__*/_jsx(\"section\",{className:\"food_section layout_padding-bottom\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"heading_container heading_center\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Our Menu\"})}),/*#__PURE__*/_jsx(\"ul\",{className:\"filters_menu\",children:[\"all\",\"burger\",\"pizza\",\"pasta\",\"fries\"].map(category=>/*#__PURE__*/_jsx(\"li\",{className:filter===category?\"active\":\"\",onClick:()=>setFilter(category),children:category.charAt(0).toUpperCase()+category.slice(1)},category))}),orderSuccess&&/*#__PURE__*/_jsx(\"div\",{className:\"order-success\",children:orderSuccess}),/*#__PURE__*/_jsx(\"div\",{className:\"filters-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"row grid\",children:filteredMenu.map(item=>/*#__PURE__*/_jsx(\"div\",{className:`col-sm-6 col-lg-4 all ${item.category}`,children:/*#__PURE__*/_jsx(\"div\",{className:\"box\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"img-box\",children:/*#__PURE__*/_jsx(\"img\",{src:item.image,alt:item.name})}),/*#__PURE__*/_jsxs(\"div\",{className:\"detail-box\",children:[/*#__PURE__*/_jsx(\"h5\",{children:item.name}),/*#__PURE__*/_jsx(\"p\",{children:item.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"options\",children:[/*#__PURE__*/_jsx(\"h6\",{children:item.price}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",onClick:()=>handleOrder(item.id),children:\"Order Now\"})]})]})]})})},item.id))})}),/*#__PURE__*/_jsx(\"div\",{className:\"btn-box\",children:/*#__PURE__*/_jsx(\"a\",{href:\"#\",children:\"View More\"})})]})});};export default FoodSection;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","FoodSection","foodMenu","setFoodMenu","filter","setFilter","loading","setLoading","error","setError","orderSuccess","setOrderSuccess","fetchFoodData","response","fetch","ok","Error","data","json","err","message","handleOrder","itemId","method","headers","body","JSON","stringify","result","name","filteredMenu","item","category","className","children","map","onClick","charAt","toUpperCase","slice","src","image","alt","description","price","id","href"],"sources":["D:/Lesson_Year4/Web/project/buger/FEANECOMMERCE/feanecommerce/src/components/Home/food.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst FoodSection = () => {\r\n  const [foodMenu, setFoodMenu] = useState([]); // Stores the food items\r\n  const [filter, setFilter] = useState(\"all\"); // Current category filter\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n  const [error, setError] = useState(null); // Error state\r\n  const [orderSuccess, setOrderSuccess] = useState(\"\"); // Order success message\r\n\r\n  // Fetch food data from the fake API\r\n  useEffect(() => {\r\n    const fetchFoodData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://mocky.io/v2/your-mock-api-endpoint\"\r\n        ); // Replace with your API endpoint\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch food data\");\r\n        }\r\n        const data = await response.json();\r\n        setFoodMenu(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchFoodData();\r\n  }, []);\r\n\r\n  // Handle ordering pizza\r\n  const handleOrder = async (itemId) => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://mocky.io/v2/your-order-api-endpoint\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ itemId }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to place order\");\r\n      }\r\n\r\n      const result = await response.json();\r\n      setOrderSuccess(`Order placed successfully for item: ${result.name}`);\r\n    } catch (err) {\r\n      setOrderSuccess(\"Failed to place order. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Filtered items based on the selected category\r\n  const filteredMenu =\r\n    filter === \"all\"\r\n      ? foodMenu\r\n      : foodMenu.filter((item) => item.category === filter);\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading food menu...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <section className=\"food_section layout_padding-bottom\">\r\n      <div className=\"container\">\r\n        <div className=\"heading_container heading_center\">\r\n          <h2>Our Menu</h2>\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <ul className=\"filters_menu\">\r\n          {[\"all\", \"burger\", \"pizza\", \"pasta\", \"fries\"].map((category) => (\r\n            <li\r\n              key={category}\r\n              className={filter === category ? \"active\" : \"\"}\r\n              onClick={() => setFilter(category)}\r\n            >\r\n              {category.charAt(0).toUpperCase() + category.slice(1)}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        {/* Success Message */}\r\n        {orderSuccess && <div className=\"order-success\">{orderSuccess}</div>}\r\n\r\n        {/* Food Items */}\r\n        <div className=\"filters-content\">\r\n          <div className=\"row grid\">\r\n            {filteredMenu.map((item) => (\r\n              <div\r\n                key={item.id}\r\n                className={`col-sm-6 col-lg-4 all ${item.category}`}\r\n              >\r\n                <div className=\"box\">\r\n                  <div>\r\n                    <div className=\"img-box\">\r\n                      <img src={item.image} alt={item.name} />\r\n                    </div>\r\n                    <div className=\"detail-box\">\r\n                      <h5>{item.name}</h5>\r\n                      <p>{item.description}</p>\r\n                      <div className=\"options\">\r\n                        <h6>{item.price}</h6>\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => handleOrder(item.id)}\r\n                        >\r\n                          Order Now\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* View More Button */}\r\n        <div className=\"btn-box\">\r\n          <a href=\"#\">View More</a>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FoodSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}